/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/RCHLes1Qo6e
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { DM_Sans } from 'next/font/google'

dm_sans({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
'use client';

import { useSearchParams } from 'next/navigation';
import Link from 'next/link';
import { Button } from '@/components/ui/button';

export function Success() {
  const searchParams = useSearchParams();
  const audioUrl = searchParams?.get('audioUrl') || '';

  const handleDownload = () => {
    if (audioUrl) {
      // Create a temporary anchor element
      const link = document.createElement('a');
      link.href = audioUrl;
      link.download = `podcast.mp3`; // Set the filename
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
    }
  };

  return (
    <div className="flex flex-col min-h-screen items-center justify-center bg-background text-foreground">
      <div className="text-center space-y-4">
        <button onClick={handleDownload} className="cursor-pointer">
          <DownloadIcon className="h-24 w-24 text-primary mx-auto" />
        </button>
        <h1 className="text-3xl font-bold">Your Podcast is Ready to Download</h1>
        <p className="text-muted-foreground">Click the icon above to download your podcast.</p>
        <div className="flex justify-center space-x-4 mt-8">
          <Button asChild>
            <Link href="/">Generate New Podcast</Link>
          </Button>
          <Button asChild variant="outline">
            <Link href="/">Back to Home</Link>
          </Button>
        </div>
      </div>
    </div>
  );
}

function DownloadIcon(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4" />
      <polyline points="7 10 12 15 17 10" />
      <line x1="12" x2="12" y1="15" y2="3" />
    </svg>
  );
}
